%%
%% This is file `tslilypond.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% lilypond.dtx  (with options: `package')
%%  Copyright â„‚ 2022 Tobias Schlemmer
%% 
%%  This program is provided under the terms of the
%%  LaTeX Project Public License distributed from CTAN
%%  archives in directory macros/latex/base/lppl.txt.
%% 
%%  This work is "maintained" (as per LPPL maintenance status) by
%%  Tobias Schlemmer <keinstein@users.sf.net>.
%% 
%%  This work consists of the files
%%    tslilypond.dtx and
%%    tslilypond.ins
%% 
%%  and the derived files
%%    tslilypond.sty
%%    tslilypond.lua
%% 
%% 
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{tslilypond}%
[2023/09/06 v0.1  lilypond-book
inside latex%
]
\RequirePackage{graphics,verbatim,iftex}
\IfFileExists{shellesc.sty}
 {\RequirePackage{shellesc}
  \@ifpackagelater{shellesc}{2016/04/29}
   {}
   {\protected\def\ShellEscape{\immediate\write18 }}}
 {\protected\def\ShellEscape{\immediate\write18 }}
\directlua{lilypond = require("tslilypond")}
\newwrite\ly@ini@file
\RequirePackage{pgfkeys}
\newcommand\lilypondset{%
  \pgfqkeys{/lilypond}%
}
\let\lyset\lilypondset
\lilypondset{default/.style={}}
\def\ly@append@default#1{%
  \lilypondset{default/.append style={#1}}%
}
\DeclareOption*{%
  \expandafter\ly@append@default\expandafter{\CurrentOption}%
}
\ProcessOptions\relax
\newif\ifly@opt@error@unimplemented
\ly@opt@error@unimplementedfalse

\def\ly@error@PackageWarning#1#2#3{\PackageWarning{#1}{#2}}

\newcommand\ly@unimplemented@option{%
  \ifly@opt@error@unimplemented
    \let\@tempa\PackageError
  \else
    \let\@tempa\ly@error@PackageWarning
  \fi
  \@tempa{tslilypond}{The lilypond-book option \pgfkeyscurrentkey\space is
    not implemented.}{The current file uses the option
    \pgfkeyscurrentkey\space that is defined by by lilypond-book, but has
    no effect in tslilypond.sty.^^J^^J
    Usually this is just a warning. It is treated as an error because
    `error on undefined' has been set somewhere either directly or
    indirectly through \string\lilypondset \space. The error can be
    demoted again by passing `error on undefined=false' to the current
    command or environment.}%
}

\lilypondset{%
  error on undefined/.is if=ly@opt@error@unimplemented,
  verbatim/.code=\ly@unimplemented@option,
  texidoc/.code=\ly@unimplemented@option,
  doctitle/.code=\ly@unimplemented@option,
  nogettext/.code=\ly@unimplemented@option,
  intertext/.code=\ly@unimplemented@option,
  printfilename/.code=\ly@unimplemented@option
}

\newlength{\ly@opt@indent}
\setlength{\ly@opt@indent}{0pt}
\newlength{\ly@opt@exampleindent}
\setlength{\ly@opt@exampleindent}{0.4in}
\newlength{\ly@opt@left@padding}
\setlength{\ly@opt@left@padding}{3mm}
\newlength{\ly@opt@left@shift}
\setlength{\ly@opt@left@shift}{3mm}

\newcommand\ly@make@lilypond@bool[2]{%
  \expandafter\def\csname ly@opt@#1true\endcsname{%
    \AddToHookNext{lilypond/snippet/paper/end}{\ly@writebool{ #2}t}%
  }%
  \expandafter\def\csname ly@opt@#1false\endcsname{%
    \AddToHookNext{lilypond/snippet/paper/end}{\ly@writebool{ #2}f}%
  }%
  \lilypondset{%
    #2/.is if={ly@opt@#1},%
    #2/.default=true,
    no#2/.style={#2=false}%
  }%
}
\newif\ifly@opt@time
\ly@opt@timetrue
\newif\ifly@opt@printtime
\ly@opt@printtimefalse
\newif\ifly@opt@fragment
\ly@opt@fragmentfalse
\newif\ifly@opt@quote
\ly@opt@quotefalse
\newif\ifly@opt@relative
\ly@opt@relativefalse
\newif\ifly@opt@inline
\ly@opt@inlinefalse
\ly@make@lilypond@bool{ragged@right}{ragged-right}

\lilypondset{
  staffsize/.code={%
    \AddToHookNext{lilypond/snippet/paper/before}{%
      \ly@lilypond@writelisp{set-global-staff-size #1}%
    }%
  },
  calculate staffsize/.style={%
    staffsize=(* \f@size\space (magstep #1))
  },
  calculate staffsize/.default=4,
  % line-width/.initial=\linewidth,
  line-width/.code={%
    \AddToHookNext{lilypond/snippet/paper/end}{\ly@lilypond@writelength{ line-width}{#1}}%
  },
  paper-size/.code={%
    \AddToHookNext{lilypond/snippet/paper/start}{\ly@lilypond@writelisp{set-paper-size "#1"}}%
  },,
  time/.is if=ly@opt@time,
  time/.append code={%
    \ly@opt@printtimetrue
    \AddToHookNext{lilypond/snippet/layout/end}{\ly@lilypond@write@time}%
  },
  notime/.style={time=false},
  fragment/.is if=ly@opt@fragment,
  nofragment/.style={fragment=false},
  fragment/.append code={%
    \AddToHookNext{lilypond/snippet/content/before}{%
      \ifly@opt@relative
        \ly@lilypond@write@fragment@code{%
          \string\relative \space\pgfkeysvalueof{/lilypond/relative}%
        }%
      \fi
      \ly@lilypond@write@fragment@code{\lyopenbrace}%
      \ly@opt@fragmentfalse
    }%
    \AddToHookNext{lilypond/snippet/content/after}{%
      \ly@lilypond@write@fragment@code{\lyclosebrace}%
      \ly@opt@fragmentfalse
    }%
  },
  indent/.code={\setlength\ly@opt@indent{#1}},
  noindent/.style={indent=0pt},
  quote/.is if=ly@opt@quote,
  noquote/.style={quote=false},
  relative/.initial=c',
  relative/.default=c',
  relative/.code={%
    \lilypondset{fragment}%
    \ly@opt@relativetrue
    \pgfkeyssetvalue{/lilypond/relative}{#1}%
  },
  norelative/.code={%
    \ly@opt@relativefalse
  },
  left-padding/.code={\setlength\ly@opt@left@padding{#1}},
  left-shift/.code={\setlength\ly@opt@left@shift{#1}},
  %
  inline/.is if=ly@opt@inline,
  noinline/.style={inline=false},
  output/.code={\def\lilypondoutput{#1}},
  loglevel/.initial=ERROR,
  extra source/.code={%
    \expandafter\def\expandafter\lilypondlyinputfiles\expandafter{%
      \lilypondlyinputfiles\space#1%
    }%
  },
  snippet file name/.code=\ly@snippetfilename@set{#1},
}
\ifluatex

\def \lyshowfontname {%
  \directlua {tex.sprint(lilypond.get_current_font_name())}%
}
\def \lyshowfontfile {%
  \directlua {tex.sprint(lilypond.get_current_font_file())}%
}
\def \lyshowfontdir {%
  \directlua {tex.sprint(lilypond.get_current_font_dir())}%
}
\newcommand\ly@save@fontdata[1]{%
  \expandafter\xdef\csname ly@font@dir@#1\endcsname{%
    \lyshowfontdir
  }%
  \expandafter\xdef\csname ly@font@name@#1\endcsname{%
    \lyshowfontname
  }%
}

\newcommand\ly@savefontdata{%
  \begingroup
  \rmfamily\ly@save@fontdata{rm}%
  \sffamily\ly@save@fontdata{sf}%
  \ttfamily\ly@save@fontdata{tt}%
  \endgroup
}
\newcommand\ly@writefontdirs{%
  \ly@lilypond@writelisp{ly:font-config-add-directory "\ly@font@dir@rm"}
  \ly@lilypond@writelisp{ly:font-config-add-directory "\ly@font@dir@sf"}
  \ly@lilypond@writelisp{ly:font-config-add-directory "\ly@font@dir@tt"}
}
\newcommand\ly@writefontdata{%
  \ly@lilypond@writelisp{define fonts
    (make-pango-font-tree
    "\ly@font@name@rm"
    "\ly@font@name@sf"
    "\ly@font@name@tt"
    (/ staff-height pt 20))}
}
\lilypondset{%
  luatexfonts/.code={%
    \ly@savefontdata
    \AddToHookNext{lilypond/snippet/paper/before}{\ly@writefontdirs}%
    \AddToHookNext{lilypond/snippet/paper/start}{\ly@writefontdata}%
  }%
}
\else
\lilypondset{%
  luatexfonts/.code={%
    \PackageWarning{tslilypond}
    {Fonts cannot be exported to LilyPond. You should use LuaLaTeX
      instead.}
  }%
}
\fi
\let\ly@lilypond@start\lilypondstart
\def\lilypondstart{
  \ly@lilypond@start
  \def\interscoreline{%
    \nopagebreak[3]\par%
    \nopagebreak[3]%
    \vskip\lilypondpaperinterscoreline\lilypondpaperunit%
    \nopagebreak[3]%
  }
  \def\lilypondpagebreak{\par}
  \expandafter\inputencoding{\lilypondpaperinputencoding}
  \let\lilypondfontencoding\fontencoding
}
\let\ly@lilypond@end\lilypondend
\def\lilypondend{%
  \ly@lilypond@end%
  \vskip\afterlilypondskip%
}
\def\ly@remove@ext@cmpa{ly}
\begingroup%
\catcode`\?=14
\catcode`\%=11\gdef\lypercent{%?
}
\catcode`\$=11\gdef\lydollar{$?$
}
\catcode`\[=1\relax
  \catcode`\]=2\relax
\catcode`\{=11
\catcode`\}=11
\gdef\lyopenbrace[{]
  \gdef\lyclosebrace[}]
\endgroup
\ExplSyntaxOn
\def\lilypondconvertto#1#2%
{
  \fp_to_decimal:n {(#1)/(1#2)}%
}
\ExplSyntaxOff
\begingroup
  \catcode`P=12
  \catcode`T=12
  \lowercase{
    \def\x{\def\ly@rem@pt##1.##2PT{##1.##2}}}
\expandafter\endgroup\x
\def\ly@strip@pt{\expandafter\ly@rem@pt \the}
\def\ly@strip@space#1 {{#1}}
\newcommand\lilypondcommandline[1]{%
  \def\ly@prog{#1}%
}
\lilypondcommandline{%
  lilypond -I`pwd` -daux-files  -dseparate-page-formats=pdf
  --output=\lilypondoutput\space
  --loglevel=\pgfkeysvalueof{/lilypond/loglevel}
  %-dread-file-list
  -dno-strip-output-dir
  \lilypondsnippetfilename
}
\newcommand\lilypondscript[1]{%
  \def\ly@script{#1}%
}
\def\ly@script{%
  if ! md5sum -c \lilypondlymdfivefile ;
  then   \ly@prog &&
  md5sum \lilypondlyinputfiles >\lilypondlymdfivefile ;
  fi
}%{$lyfile}; echo '{${lyfile\lypercent.ly}}{\ly@file@name.lini}'
\def\ly@input@path{{}}%
\def\appendtolilypondinputpath#1{%
  \expandafter\edef\expandafter\ly@input@path\expandafter{%
    \ly@input@path:#1%
  }%
}
\def\prependtolilypondinputpath#1{%
  \expandafter\edef\expandafter\ly@input@path\expandafter{%
    \expandafter#1\expandafter:\ly@input@path%
  }%
}
\def\setlilypondinputpath#1{%
  \edef\ly@input@path{#1}%
}
\def\ly@lilypondfile@set#1{%
  \ly@lilypondfile@normalised@ext\ly@file@lysource{#1}{.ly}%
}
\def\ly@snippetfilename@set#1{%
  \ly@lilypondfile@parse@name\lilypondoutputbase{#1}%
  \ifx\filename@ext\relax
    \def\filename@ext{ly}%
    \edef\lilypondsnippetfilename{#1.ly}%
  \else
    \edef\lilypondsnippetfilename{#1}%
  \fi
  \edef\lilypondlymdfivefile{\lilypondoutputbase.md5}%
  % lilypond appends -2.pdf, -systems.tex or whatever convenient
  \edef\lilypondoutput{\lilypondoutputbase}%
}
\def\ly@lilypondfile@normalised@ext#1#2#3{%
  \let\ly@save@input@path\input@path
  \let\input@path\ly@input@path
  %
  \@iffileonpath{#2}{}{%
    \@iffileonpath{#2#3}{}{%
      \PackageError{tslilypond}{%
        The requested file `#2' could not be found in the lilypond input path^^J
        `\input@path'}{%  nothing found, users get what they deserve
        The LilyPond input path can be set and extended with the
        macros \string\setlilypondinputpath,
        \string\appendtolilypondinputpath\ and \string\prependtolilypondinputpath.}%
      \edef\@filef@und{"#2" }%
    }%
  }%
  \edef#1{\expandafter\unqu@tefilef@und\@filef@und\@nil}%
  \let\input@path\ly@save@input@path
}
\def\ly@lilypondfile@parse@name#1#2{%
  \edef\@tempa{#2}%
  \expandafter\filename@parse{\@tempa}%
  \edef#1{\filename@area\filename@base}%
}
\newcommand\afterlilypondskip{\baselineskip}
\AtBeginDocument{%
  \@ifundefined{end[}{%]
    \AddToHook{env/[/before}%]
    {\PackageError{tslilypond}{Forbidden optional argument before an
        environment name.}{LaTeX does not allow optional arguments to^^J
        environments to be written before the environment^^J
        name. Please, change your document to be LaTeX conformant.^^J
      }%
    }%
  }{}%
}
\let\ly@saved@begin\relax
\def\ly@lilypondredefinebegin{%
  \ifx\ly@saved@begin\relax
    \let\ly@saved@begin\begin\iffalse\end\fi
    \def\ly@begin{%
      \@ifnextchar[%]
        {\ly@begin@}{\ly@saved@begin}%
    }%
    \def\ly@begin@[##1]##2{\ly@saved@begin{##2}[{##1}]}
    \PackageWarning{%
      tslilypond%
    }{%
      \string\begin\space has been redefined using
        \string\lilypondredefinebegin\iffalse\end\fi^^J^^J%
      Expect strange behaviour. You have been warned!!!^^J^^J
    }%
    \let\begin\ly@begin
  \else
    \PackageError{%
      tslilypond%
    }{%
      \string\begin\space has already been redefined\iffalse\end\fi%
    }{%
      It is not possible to redefine \string\begin\space\iffalse\end\fi twice%
    }%
  \fi
}
\AtBeginDocument{%
  \let\lilypondredefinebegin\ly@lilypondredefinebegin
}
\def\lilypondaddcode{\immediate\write\ly@ini@file}
\newcounter{ly@snippet}
\setcounter{ly@snippet}{0}
\newcommand{\ly@newsnippet}{%
  \stepcounter{ly@snippet}%
}
\newcommand{\ly@snippetfilename}{%
  \jobname-ly\arabic{ly@snippet}%
}
\def\ly@lilypond@writecomment#1{%
  \lilypondaddcode{%
    \lypercent#1%
  }%
}%
\def\ly@lilypond@writelisp#1{%
  \lilypondaddcode{%
    \string##(#1)^^J%
  }%
}%
\def\ly@lilypond@writeparam#1#2{%
  \lilypondaddcode{%
    #1 = \string###2^^J%
  }%
}%
\def\ly@lilypond@writelength#1#2{%
  \@tempdima=\dimexpr#2\relax
  \lilypondaddcode{%
    \string#1\space=\space\ly@strip@pt\@tempdima \string\pt%
  }%
}
\def\ly@writebool#1#2{%
  \lilypondaddcode{%
    #1\space=\space\string##\string###2%
  }%
  \ignorespaces
}
\def\ly@lilypond@write@time{
  \ifly@opt@printtime
    \ifly@opt@time
    \else
      \lilypondaddcode{%
        \space\string\context \lyopenbrace^^J%
        \space\space\string\Score%
      }%
      \ly@writebool{\space\space\space timing}f%
      \lilypondaddcode{%
        \space\lyclosebrace^^J%
        \space\string\context \lyopenbrace^^J%
        \space\space\string\Staff^^J%
        \space\space\space\string\remove\space Time_signature_engraver^^J%
        \space\lyclosebrace
      }%
    \fi
  \fi
  \ly@opt@printtimefalse
}
\def\ly@lilypond@write@fragment@code#1{
  \ifly@opt@fragment
    \lilypondaddcode{#1}%
  \fi
}
\def\ly@file@lypreamble{lilypond-book-preamble.ly}
\def\ly@lilypond@startsnippet{%
  \def\pt{pt}%
  \def\mm{mm}%
  \def\cm{cm}%
  \def\in{in}%
}
\def\lilypondfile{%
  \@ifnextchar[\ly@lilypondfile@\ly@lilypondfile@b%]
}
\def\ly@lilypondfile@b#1{%
  \ly@lilypondfile@[]{#1}%
}
\def\ly@lilypondfile@[#1]#2{%
  \ly@lilypondfile@normalised@ext\ly@file@lysource{#2}{.ly}%
  %
  \ly@lilypondsnippet@[{
    every file/.try,
    extra source={'\ly@file@lysource'},
    #1}]{%
    \string\include\space "\ly@file@lysource"^^J%
  }%
  \ly@clearhooksnext
}
\def\ly@clearhooksnext{}
\def\ly@NewHook#1{%
  \NewHook{#1}%
  \lilypondset{%
    hook #1/.clear/.code=\ClearHookNext{#1},
    hook #1/.code=\AddToHookNext{#1}{##1},
  }%
  \expandafter\def\expandafter\ly@clearhooksnext\expandafter{%
    \ly@clearhooksnext
    \ClearHookNext{#1}%
  }%
}
\ly@NewHook{lilypond/snippetfile/before}
\ly@NewHook{lilypond/snippetfile/after}
\ly@NewHook{lilypond/snippet/paper/before}
\ly@NewHook{lilypond/snippet/paper/start}
\ly@NewHook{lilypond/snippet/paper/end}
\ly@NewHook{lilypond/snippet/paper/after}
\ly@NewHook{lilypond/snippet/layout/end}
\ly@NewHook{lilypond/snippet/content/before}
\ly@NewHook{lilypond/snippet/content/after}
\def\ly@pgfkeysnovalue{\pgfkeysnovalue}
\long\def\ly@lilypondsnippet@[#1]#2{%
  \ly@newsnippet
  \begingroup
  \ly@lilypond@startsnippet
  \ly@snippetfilename@set{\ly@snippetfilename}%
  \def\lilypondlyinputfiles{\lilypondsnippetfilename}%
  %
  %\edef\ly@file@name{\filename@area\filename@base}%
  \lilypondset{defaults/.try,#1}%
  \ifly@opt@quote
    \begin{quote}%
    \fi
    \pgfkeysgetvalue{/lilypond/staffsize}{\@ly@staffsize}%
    \UseHook{lilypond/snippetfile/before}%
    \immediate\openout\ly@ini@file=\lilypondsnippetfilename
    \ly@lilypond@writecomment{%
      \lypercent\lypercent\space Generated by tslilypond.sty%
    }%
    \ly@lilypond@writecomment{%
      \lypercent\lypercent\space Options: [#1]%
    }%
    \lilypondaddcode{%
      % \ly@lilypond@writelisp{set! toplevel-score-handler ly:parser-print-score}%
      % \ly@lilypond@writelisp{set! toplevel-music-handler (lambda (p m)
      % (ly:parser-print-score p (ly:music-scorify m p)))}%
      \string\include\space "\ly@file@lypreamble"^^J%
    }%
    \ly@lilypond@writecomment{%
      ****************************************************************%
    }%
    \ly@lilypond@writecomment{ Start cut-&-pastable-section}%
    \ly@lilypond@writecomment{%
      ****************************************************************%
    }%
    \ly@lilypond@writelisp{%
      ly:set-option 'eps-box-padding %
      \lilypondconvertto{\ly@opt@left@padding}{mm}%
    }%
    \UseHook{lilypond/snippet/paper/before}%
    \lilypondaddcode{%
      \string\paper \lyopenbrace% \}
    }%
    \UseHook{lilypond/snippet/paper/start}%
    \ly@lilypond@writelength{ indent}{\ly@opt@indent}%
    \ly@lilypond@writelength{ line-width}\linewidth
    \UseHook{lilypond/snippet/paper/end}%
    \lilypondaddcode{%
      \lyclosebrace^^J%
    }%
    \UseHook{lilypond/snippet/paper/after}%
    %
    \lilypondaddcode{%
      \string\layout \lyopenbrace%
    }%
    \UseHook{lilypond/snippet/layout/end}%
    \lilypondaddcode{%
      \lyclosebrace^^J%
    }%
    \begingroup
    \UseHook{lilypond/snippet/content/before}%
    \endgroup
    \ly@lilypond@writecomment{%
      ****************************************************************%
    }%
    \ly@lilypond@writecomment{ ly snipppet:}%
    \ly@lilypond@writecomment{%
      ****************************************************************%
    }%
    \lilypondaddcode{%
      \string\sourcefilename
      \space"\CurrentFile\space LilyPond\space snippet"^^J%
      \string\sourcefileline
      \space\the\inputlineno^^J%
      #2%
    }%
    \ly@lilypond@writecomment{%
      ****************************************************************%
    }%
    \ly@lilypond@writecomment{ end ly snipppet}%
    \ly@lilypond@writecomment{%
      ****************************************************************%
    }%
    \begingroup
    \UseHook{lilypond/snippet/content/after}%
    \endgroup
    \immediate\closeout\ly@ini@file
    \UseHook{lilypond/snippetfile/after}%
    \ShellEscape{\ly@script}%
    \ifly@opt@inline
    \else
      \par
    \fi
    \parindent 0pt\parskip 0pt
    \noindent
    \providecommand\betweenLilyPondSystem[1]{\par}%
    \let\ly@betweenLilyPondSystem\betweenLilyPondSystem
    \def\betweenLilyPondSystem##1{%
      \ly@betweenLilyPondSystem{##1}%
      \leavevmode\hspace{-\ly@opt@left@shift}%
    }%
    \ifx\preLilyPondExample \undefined
    \else
      \expandafter\preLilyPondExample
    \fi
    \def\lilypondbook{}%
    \ifvmode
      \leavevmode
    \fi
    \hspace{-\ly@opt@left@shift}%
    \InputIfFileExists{\ly@snippetfilename-systems.tex}{}{%
      \PackageWarning{lilypond}{%
        could not load \ly@snippetfilename-systems.tex\MessageBreak
        perhaps you didn't specify  ``--shell-escape'' or \MessageBreak
        used multiple dots in filenames%
      }%
    }%
    \ifx\postLilyPondExample\undefined
    \else
      \expandafter\postLilyPondExample
    \fi
    \unless\ifly@opt@inline\par\fi
    \ifly@opt@quote
    \end{quote}%
  \fi
  \endgroup
}
\iffalse
  \ly@lilypond@writelength{paper-height}\paperheight
  \ly@lilypond@writelength{paper-width}\paperwidth
  \ly@lilypond@writelength{top-margin}{\topmargin + 1 in}%
  \@tempdima=\dimexpr\paperheight-\topmargin-\textheight\relax
  \ly@lilypond@writelength{bottom-margin}{\paperheight-\topmargin -
    1in - \textheight}
  \ly@lilypond@writelength{left-margin}{\leftmargin}%
  \ly@lilypond@writelength{right-margin}{\paperwidth-1in-\leftmargin-\textwidth}%
  %
  \ly@writebool{ragged-bottom}t%
  \ly@writebool{ragged-last-bottom}t%
  \ly@writebool{ragged-last}f%
  \ly@writebool{two-sided}f% managed by LaTeX
  %
  \ly@writebool{annotate-spacing}t%
  %
  % \ly@lilypond@writelength{hsize}\paperwidth
  % \string\pt\space\lypercent\space\the\paperwidth^^J\space\space
  % \ly@lilypond@writelength{vsize}\paperheight
  % \ly@lilypond@writelength{betweensystempadding}\paperheight
  % \ly@lilypond@writelength{topmargin}\@tempdima
  % \ly@lilypond@writelength{leftmargin}\@tempdima
  %
  \ly@writebool{oddFooterMarkup}f
  \ly@writebool{oddHeaderMarkup}f
  \ly@writebool{bookTitleMarkup}f
  \ly@writebool{scoreTitleMarkup}f
  %
  \ly@lilypond@writelength{horizontal-shift}\@tempdima
  \ly@lilypond@writelength{short-indent}\@tempdima
\fi
\newtoks\ly@lilypond@toks

\def\ly@verbatim@to@toks@line{%
  \expandafter\expandafter\expandafter\ly@lilypond@toks
  \expandafter\expandafter\expandafter{%
    \expandafter\the\expandafter\ly@lilypond@toks\the\verbatim@line^^J}%
}

\def\ly@verbatim@to@toks{%
  \ly@lilypond@toks{}%
  \let\verbatim@processline\ly@verbatim@to@toks@line
  \let\do\@makeother\dospecials
  \catcode`\^^M\active\relax
  % \catcode`\^^I=12\relax
  \verbatim@start
}

\def\endly@verbatim@to@toks{%
}
\begingroup
\@makeother\[\@makeother\]%
\gdef\ly@lilypondstart[#1]{%
  \def\ly@lilypond@env@end{%
    \ly@lilypondsnippet@[{every lilypond/.try,#1}]{%
      \ly@lilypond@do@content
    }%
  }%
  \ly@verbatim@to@toks
}
\gdef\ly@lilypondstart@@{%
  \begingroup
  \let\do\@makeother\dospecials
  \@ifnextchar[%]
  {%
    \ly@lilypondstart
  }{%
    \ly@lilypondstart[]
  }%
}
\endgroup
\NewDocumentCommand{\ly@lilypondstart@}{O{} v}{%
  \ly@lilypondsnippet@[{every lilypond/.try,#1}]{#2}%
}
\def\ly@lilypond@envname{lilypond}
\newenvironment{lilypond}{%
  \ifx\@currenvir\ly@lilypond@envname
    \expandafter\ly@lilypondstart@@
  \else
    \expandafter\ly@lilypondstart@
  \fi
}
{%
  \endly@verbatim@to@toks
  \xdef\ly@lilypond@do@content{\the\ly@lilypond@toks}%
  \expandafter\def\expandafter\@tempa\expandafter{%
    \expandafter\endgroup
    \expandafter\def\expandafter\ly@lilypond@env@end
    \expandafter{\ly@lilypond@env@end}}%
  \@tempa
  \ly@lilypond@env@end
  \aftergroup\ly@clearhooksnext
}
\newcommand\ly@exp@lilypondstart@[1][]{%
  \ly@lilypondsnippet@[{every lilypond/.try,#1}]%
}
\def\ly@exp@lilypond@envname{lilypondtex}
\NewDocumentEnvironment{lilypondtex}{O{} +b}{%
  \ly@lilypondsnippet@[{every lilypond/.try,#1}]{#2}%
}{%
}
\let\ly@exp@lilypondstart@@\lilypondtex
\def\lilypondtex{%
  \ifx\@currenvir\ly@exp@lilypond@envname
    \expandafter\ly@exp@lilypondstart@@
  \else
    \expandafter\ly@exp@lilypondstart@%
  \fi
}{%
}
\def\NewLilypondSourceCode#1{%
  \def\ly@verbatim@command{#1}%
  \ly@verbatim@to@toks
}%'

\def\endNewLilypondSourceCode{%
  \endly@verbatim@to@toks
  \xdef\ly@lilypond@do@content{%
    \noexpand\def
    \expandafter\noexpand\csname
    ly@source@\ly@verbatim@command\endcsname{%
      \the\ly@lilypond@toks
    }%
  }%
  \aftergroup\ly@lilypond@do@content
}
\def\UseLilypondSource#1{%
  \csname ly@source@#1\endcsname
}
%% 
%%
%% End of file `tslilypond.sty'.
