% \iffalse meta-comment
% vim: textwidth=75
%<*internal>
\iffalse
%</internal>
%<*readme>
tslilypond
==========

           |
----------:| -----------------------------------------------------------------
  lilypond:| lilypond-book implemneted in LaTeX
    Author:| Tobias Schlemmer <keinstein@users.sf.net>
    E-mail:| keinstein@users.sf.net
   License:| Released under the LaTeX Project Public License v1
       See:| http://www.latex-project.org/lppl.txt


Short description:

This package contains some macros thet help to arrange songs on pages.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\preamble
 Copyright â„‚ 2022 Tobias Schlemmer
 
 This program is provided under the terms of the
 LaTeX Project Public License distributed from CTAN
 archives in directory macros/latex/base/lppl.txt.

 This work is "maintained" (as per LPPL maintenance status) by
 Tobias Schlemmer <keinstein@users.sf.net>.

 This work consists of the files
   tslilypond.dtx and
   tslilypond.ins

 and the derived file
   tslilypond.sty.

\endpreamble

\askforoverwritefalse
\usedir{tex/latex/tsmusic}

% \askforoverwritefalse
\generate{\file{tslilypond.sty}{\from{lilypond.dtx}{package}}}

\usedir{doc/latex/tsmusic}
\generate{\file{steiger.ly}{\from{lilypond.dtx}{steiger}}}

%</install>
%<*internal>
\usedir{source/latex/tsmusic}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
%</internal>
%<*install>
\nopreamble\nopostamble
\usedir{doc/latex/tsmusic}
\generate{\file{steiger.ly}{\from{lilypond.dtx}{steiger}}}
\generate{\file{fullexample.ly}{\from{lilypond.dtx}{fullexample}}}
\generate{\file{fragmentexample.ly}{\from{lilypond.dtx}{fragmentexample}}}
%</install>
%<*internal>
\usedir{doc/latex/tsmusic}
\generate{
  \file{README-tslilypond.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<install>\endbatchfile
% \fi
% \CheckSum{263}
% \iffalse
%
% ======================================================================
% lilypond.dtx 
% Copyright (C) 2005 Tobias Schlemmer
%
% This file is a package to typeset songs using LilyPond. It is
% intended to provide the same functionality as lilypond-book.
%
% This file can be redistributed and/or modified under the terms
% of the LaTeX Project Public License Version 1.2 or later distributed 
% together with this file. See LEGAL.TXT
% ======================================================================
%<*package>
%% \CharacterTable
%%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%%   Digits        \0\1\2\3\4\5\6\7\8\9
%%   Exclamation   \!     Double quote  \"     Hash (number) \#
%%   Dollar        \$     Percent       \%     Ampersand     \&
%%   Acute accent  \'     Left paren    \(     Right paren   \)
%%   Asterisk      \*     Plus          \+     Comma         \,
%%   Minus         \-     Point         \.     Solidus       \/
%%   Colon         \:     Semicolon     \;     Less than     \<
%%   Equals        \=     Greater than  \>     Question mark \?
%%   Commercial at \@     Left bracket  \[     Backslash     \\
%%   Right bracket \]     Circumflex    \^     Underscore    \_
%%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%%   Right brace   \}     Tilde         \~}
%</package>
% \fi
% \iffalse
%<package>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<*dtx> 
\ProvidesFile{lilypond.dtx}%
%</dtx>
%<driver>\ProvidesFile{lilypond.drv}%
%<package>\ProvidesPackage{tslilypond}%
%<*package|dtx|driver>
[2023/09/06 v0.1  lilypond-book
inside latex%
%</package|dtx|driver>
%<dtx> documented source]
%<package>]
%<*driver>
 bundle]
\documentclass[10pt,a4paper]{ltxdoc}
\usepackage[a4paper,BCOR20mm,DIV12]{typearea}
\usepackage{dtxdescribe}
\newcommand\PGF{\acro{PGF}}
\usepackage{tslilypond}
% lilypond snippets contain at least one comment (`% eof')
% So we save the original catcode here and
% restore it at the beginning of each lilypond snippet.
% After the snippet the catcode is restored that was in charge before
% the snippet. Nested \edefs  need nested \noexpands ;-)
\edef\tspercentcomments{%
  \noexpand\edef\noexpand\tsendpercentcomments{%
    \noexpand\noexpand\noexpand\catcode`\noexpand\noexpand\%=\noexpand\the\noexpand\catcode`\noexpand\%%
  }%
  \noexpand\catcode`\noexpand\%=\the\catcode`\%
}
\newcommand\preLilyPondExample{%
  \tspercentcomments
}
\newcommand\postLilyPondExample{%
  \tsendpercentcomments
}
%\usepackage[activate=normal]{pdfcprot}
%\usepackage{array,tabularx}
%\DisableCrossrefs
\EnableCrossrefs
\CodelineIndex
%\OnlyDescription
\RecordChanges
\makeatletter
\@ifundefined{KOMAScript}{%
  \DeclareRobustCommand{\KOMAScript}{\textsf{K\kern.05em O\kern.05em%
      M\kern.05em A\kern.1em-\kern.1em Script}}}{}
\makeatother
\begin{document}
  \DocInput{lilypond.dtx}
\end{document}
%</driver>
% \fi
% 
% \GetFileInfo{lilypond.dtx}
% \makeatletter
% \let\cn\cs
% \DoNotIndex{\!, \', \(, \), \,, \-, \., \:, \;, \?, \`}
% \DoNotIndex{\@ifundefined, \@onlypreamble, \@tempb, \@tempcnta,
% \@tempcntb, \@tfor}
% \DoNotIndex{\A, \a, \addtocounter, \advance, \and, \AtBeginDocument}
% \DoNotIndex{\bfseries, \B, \b, \boolean}
% \DoNotIndex{\C, \c, \char, \csname, \CurrentOption}
% \DoNotIndex{\D, \d, \DeclareOption, \def, \define@key, \divide, \do}
% \DoNotIndex{\E, \e, \else, \endcsname, \endinput, \equal,
% \expandafter}
% \DoNotIndex{\F, \f, \fi, \font, \fontdimen, \fontencoding,
% \fontfamily, \fontshape, \fontseries, \footnotesize, \f@encoding,
% \f@shape, \f@series, \f@family}
% \DoNotIndex{\G, \g, \gdef, \global}
% \DoNotIndex{\H, \h, \hbox, \Huge, \huge}
% \DoNotIndex{\I, \i, \ifcase, \IfFileExists, \InputIfFileExists,
% \ifnum, \ifthenelse, \ifx, \input, \itshape}
% \DoNotIndex{\J, \j}
% \DoNotIndex{\K, \k, \KV@errx}
% \DoNotIndex{\L, \l, \LARGE, \Large, \large, \let, \loop, \lpcode}
% \DoNotIndex{\M, \m, \mdseries, \MessageBreak, \multiply}
% \DoNotIndex{\N, \n, \NeedsTeXFormat, \newcommand, \newcounter,
% \newboolean, \newif, \normalsize}
% \DoNotIndex{\O, \o, \or}
% \DoNotIndex{\P, \p, \PackageError, \PackageInfo, \PackageWarning,
% \pdfoutput, \pdftexrevision, \pdftexversion, \ProcessOptions,
% \protect,, \protected@edef, \protected@xdef, \pdfprotrudechars, \ProvidesPackage}
% \DoNotIndex{\Q, \q, \quotedblbase}
% \DoNotIndex{\R, \r, \relax, \renewcommand, \repeat, \RequirePackage,
% \rmfamily, \rpcode}
% \DoNotIndex{\S, \s, \scriptsize, \scshape, \selectfont, \setboolean,
% \setbox, \setcounter, \setkeys, \sffamily, \slshape, \small, \space,
% \stepcounter, \string}
% \DoNotIndex{\T, \t, \textquotedblleft, \tiny}
% \DoNotIndex{\U, \u, \undefined, \upshape, \usepackage}
% \DoNotIndex{\V, \v, \value}
% \DoNotIndex{\W, \w, \wd}
% \DoNotIndex{\X, \x, \Y, \y, \Z, \z, \z@}
% \makeatother
% \title{The \texttt{tslilypond.sty} Package.\thanks{This file has version \fileversion{} dated
% \filedate.}}
% \author{Tobias Schlemmer}
% \maketitle
%
% \abstract{This package is intended to provide the same functionality
% as the lilypond-book program does. Due to the different design it
% has \emph{other} limitations than lilypond-book, e.\,g. this package
% passes the real |\linewidth| to lilypond and can in that way not so
% easily be fooled.}
% \tableofcontents{}
% \changes{0.1}{2005/02/12}{First usable Version with incomplete Documentation}
% \section{Introduction}
% As the abstract stated this package exists to provide the
% functionality, which was provided by the |lilypond-book| program.
%
% \subsection{A bit of History}
% The idea to write this package arose long ago. At that time lilypond
% was not able to typeset properly any accented letter using common
% input encodings. On the other hand |lilypond-book| provides a nearly
% one-pass way to typeset documents containing notes. This nice
% feature I wanted to keep, but give LilyPond also a nice chance to
% use \TeX\ for computations and to use its actual font e.\,g. as
% lyric fonts. But beside the font problems I think |lilypond-book| is
% too easy to fool, since \TeX\ is a very complicated language.
%
% But unfortunately I didn't find any time to write the package. And
% the LilyPond maintainers refused to follow my suggestions. So I
% stopped using LilyPond for my favorite project, a song
% book. Actually I stopped writing it at all. From time to time I
% looked at the project, but my font problems weren't solved. Only at
% the beginning of 2005, I realized the version 2.4.2 with the new
% font selection scheme. So I started the project again to collect all
% my song files in one document and with the help of my \LaTeX\
% knowledge I wrote this package.
%
% It is planned to try to replace all \TeX\ modi of
% |lilypond-book|. But I started at first with \LaTeX\ because there
% are more helper macros availlable and because I use it for my
% personal conversation.
%
% \subsection{Provided Features}
%
% At the moment the package is very incomplete. Unfortunately my
% LilyPond documentation does not contain the |lilypond-book|
% docs. And I didn't have the time to implement everything, which I
% could have used up to now. 
%
% At the moment the package provides a macro to insert an external
% lilypond score.
%
% The documentation may be incomplete so go on reading this document
% and look at the source if there are other useful macros for you, please.
%
% \section{Using this package.}
%
% First you have to invoke it with |\usepackage{tslilypond}| in
% the preamble of your document. 
%
% \subsection{Requirements}
%
% At the moment this package doesn't need any further \LaTeX\
% packages. But for the scores you need at least the |.tex| file of
% your LilyPond files and the corresponding |.tex| and font files of
% the LilyPond distribution to typeset your document. For automatic
% typesetting of normal |.ly| files you need at least LilyPond to be
% installed and a \TeX\ program with enabled |\write18| shell
% escapes. The current implementation also uses |md5sum| for checking
% if LilyPond has to be started again.
%
% \subsection{Using scores in your document}
%
% \DescribeMacro{\lilypondfile}
% If you have external LilyPond sources you can write
% |\lilypondfile[args]{file.ly}| at any point in your document. This
% macro will create a file named |file.lini| which includes your
% |file.ly|. The intention of this additional file is to pass some
% useful settings to LilyPond. These include setting score and music
% handlers, require dumping score extents, setting |hsize|, |vsize|,
% |linewidth|, |raggedbottom|, |topmargin| and |leftmargin|. The
% latter two are set to 0 to not compromise the \TeX\ formatting.
%
% \begin{dtxexample}*{Including LilyPond files}
%   Steiger:
%
% \lilypondfile{steiger}
% \end{dtxexample}
%
% \subsection{Customising the Package}
%
% \DescribeMacro{\lilypondcommandline}\\
% It is likely that this package refuses to call LilyPond for you. For
% this case the package has defined a macro |\ly@prog|, which provides
% the LilyPond command line. It can be set using
% |\lilypondcommandline|. At the moment you have to use the three
% macro parameters |#1|, |#2| and |#3| for the LilyPond source file,
% the filename of the output file without extension and the lini file.
% The standard command line is:
% \begin{verbatim}
% lilypond-snapshot-bin -I`pwd` --output=#2 --tex #3
% \end{verbatim}
%
% \DescribeMacro{\setlilypondinputpath}\\
% \DescribeMacro{\appendtolilypondinputpath}\\
% \DescribeMacro{\prependtolilypondinputpath}\\
% Another problem arises, if the file cannot be found by LilyPond or
% the \TeX\ program. Then you can try to set the search path for
% LilyPond source files. The path can be set using
% |\setlilypondinputpath|, which takes the new input path as
% argument. The path is a colon separated list of directories. If you
% want to append or to prepend another directory, just use
% |\appendtolilypondinputpath| or |\prependtolilypondinputpath|. These
% macros can also deal with multiple colon seperated directories.
%
% \DescribeMacro{\preLilyPondExample}\\
% \DescribeMacro{\betweenLilyPondSystem}\marg{number}\\
% \DescribeMacro{\postLilyPondExample}\\
%
% The score inclusion can be modified by the three macros
% \cs{preLilyPondExample}, \cs{betweenLilyPondSystem} and \cs{postLilyPondExample}
%
% \subsection{Keys and values}
%
% The configuration can be done using the \texttt{pgfkeys} of the
% \PGF\ bundle. all values use the prefix `\optn{lilypond}'.
% 
% \DescribeMacro{\lilypondset}\marg{options} All configuration options can be easily
% set using the macro \cs{lilypondset}. The options are given in a key
% value style. As \texttt{pgfkeys} allows styles to be defined and
% modified easily, these possibilities can be used also in \cs{lilypondset}.
%
% It has an abbreviated version â€“ 
% \DescribeMacro{\lyset}\cs{lyset}\marg{options}.
%
% The following options are defined:
% \begin{description}
% \ItemDescribeOption{defaults} This style is applied to every
% lilypond snippet. Packages options are stored, here. It can be
% changed with the \cs{lilyponddefaults} macro.
% \ItemDescribeOption{staffsize} Set the staff size in points.
% \begin{dtxexample}*{Usage of \optn{staffsize}}
%   \lilypondfile[staffsize=26]{fullexample}
% \end{dtxexample}
% \ItemDescribeOption{ragged-right} (boolean)
% \ItemDescribeOption{noragged-right} Select whether the LilyPond
% snippet shall be ragged or stretched to the right margin.
% \begin{dtxexample}*{Usage of \optn{ragged-right}}
%   \lilypondfile[ragged-right]{fullexample}
% \end{dtxexample}
% \begin{dtxexample}*{Usage of \optn{noragged-right}}
%   \lilypondfile[noragged-right]{fullexample}
% \end{dtxexample}
% \ItemDescribeOption{line-width} Set the width of the score
% lines. Default: \cs{linewidth}.
% \begin{dtxexample}*{Usage of \optn{line-width}}
%   \lilypondfile[line-width=5cm]{fullexample}
% \end{dtxexample}
% \ItemDescribeOption{paper-size} set the LilyPond paper size. This
% option is not set by default. Instead the measures from the \LaTeX{}
% paper settings are used.
% \begin{dtxexample}*{Usage of \optn{paper-size}}
%   \lilypondfile[paper-size=a6]{fullexample}
% \end{dtxexample}
% \ItemDescribeOption{time} (boolean) 
% \ItemDescribeOption{notime} Show bar numbers or not.
% \begin{dtxexample}*{Usage of \optn{time}}
%   \lilypondfile[time]{fullexample}
% \end{dtxexample}
% \begin{dtxexample}*{Usage of \optn{notime}}
%   \lilypondfile[notime]{fullexample}
% \end{dtxexample}
% \ItemDescribeOption{fragment} (boolean)
% \ItemDescribeOption{nofragment} If the option \optn{fragment} is
% given, just the notes have to be written.
% \begin{dtxexample}*{Usage of \optn{fragment}}
%   \lilypondfile[fragment]{fragmentexample}
% \end{dtxexample}
% \begin{dtxexample}*{Usage of \optn{nofragment}}
%   \lilypondfile[nofragment]{fullexample}
% \end{dtxexample}
% \ItemDescribeOption{indent}
% \ItemDescribeOption{noindent} Indent the first score line or
% not. Default: \optn{noindent}, which is the same as |indent=0pt|
% \begin{dtxexample}*{Usage of \optn{indent}}
%   \lilypondfile[indent=2cm]{fullexample}
% \end{dtxexample}
% \begin{dtxexample}*{Usage of \optn{noindent}}
%   \lilypondfile[noindent]{fullexample}
% \end{dtxexample}
% \ItemDescribeOption{quote} (boolean) Put the entire snippet into a
% \env{quote} environment:
% \begin{dtxexample}*{Usage of \optn{quote}}
%   \begin{quote}
%     \lilypondfile{fullexample}
%   \end{quote}
%   \lilypondfile[quote]{fullexample}
% \end{dtxexample}
% \begin{dtxexample}*{Usage of \optn{noquote}}
%   \lilypondfile[noquote]{fullexample}
% \end{dtxexample}
%
% \ItemDescribeOption{relative} Adds a \cs{relative} directive to the
% generated code of the \optn{fragment} option. Default is |c'|. This
% option activates also \optn{fragment}.
% \begin{dtxexample}*{Usage of \optn{relative}}
%   \lilypondfile[relative=c'']{fragmentexample}
%   \lilypondfile[relative=c'',norelative]{fragmentexample}
%   \lilypondfile[relative=c'',nofragment]{fullexample}
%   \lilypondfile[norelative]{fullexample}
% \end{dtxexample}
% \end{description}
% Additionally the following options are recognised:
% \begin{description}
%   \ItemDescribeOption{output} The directory that is passed to
%   the |--output| parameter of LilyPond.
%   \begin{dtxexample}*{Usage of \optn{output}}
%     \lilypondfile[output=./test/]{fullexample}
%   \end{dtxexample}
%   \ItemDescribeOption{loglevel} The option loglevel sets the log
%   level of LilyPond. The default is `\optn{ERROR}' which supresses
%   all output except error messages. Allowed loglevel 
%   \begin{dtxexample}*{Usage of \optn{loglevel}}
%     \lilypondfile[loglevel=DEBUG]{fullexample}
%   \end{dtxexample}
%   \ItemDescribeOption{extra source} As running LilyPond can take a long time, a snippet is
%   processed by LilyPond only, when it has changed. If the snippet
%   includes other source files, \LaTeX{} cannot detect them and may
%   skip rebuilding of the score even when it has changed. the opiton
%   \optn{extra source} takes one parameter, a list of file names
%   separated by spaces. File names containing spaces can be quoted
%   with |"| or |'| or the spaces can be escaped according to the
%   rules of the current system shell. The parmameter is parsed using
%   as normal \LaTeX{} code. So special characters like umlauts or
%   backslash must be handled with special care.
% \end{description}
%
% \DescribeMacro{lilyponddefaults}\marg{options} set the default style
% for all LilyPond snippets.
%
% The following options are not yet implemented:
% \begin{description}
%   \ItemDescribeOption{verbatim}
%   \ItemDescribeOption{texidoc}
%   \ItemDescribeOption{doctitle}
%   \ItemDescribeOption{nogettext}
%   \ItemDescribeOption{intertext}
%   \ItemDescribeOption{printfilename}
% \end{description}
%
% \section{Bugs and Caveats}
%
% Unfortunately I don't know if it is possible to acces the \TeX\
% search path directly. So files on that path, which are not in the
% current directory can not be proper included by LilyPond. There are
% several solutions possible: 
% \begin{itemize}
% \item Try to set the include path for LilyPond
% directly.
% \item Move the file outside the \TeX\ input path. Or change that
% path so that \TeX\ doesn't find this file.
% \item Give the full or relative path of the file according to the
% current working directory to the macro.
% \end{itemize}
%
% Hopefully there're no further bugs left, but only features |;->|. 
%
% \section{Contributing}
%
% Though it is only developed regarding to my needs almost any
% contribution is welcome. Just drop me a message: |keinstein_junior@gmx.net|.
%
% \section{Acknowledgements}
%
% \StopEventually{}
% \appendix
% \section{The Code Itself}
% 
% First some remarks: the documentation may be inaccurate in some
% places, so look at the code and it'll be very likely that the
% documentation is incomplete.
%
% \subsection{The Package preamble}
%
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% \subsubsection{Necessary packages}
%
% We need \cs{includegraphics}.
%
%
%    \begin{macrocode}
\RequirePackage{graphics}
%    \end{macrocode}
% \begin{macro}{\ly@ini@file}
% File descriptor for writing |.lini| files.
%
%    \begin{macrocode}
\newwrite\ly@ini@file
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Configuration}
%
% The package \texttt{pgfkeys} is part of the \PGF bundle.
%
%    \begin{macrocode}
\RequirePackage{pgfkeys}
%    \end{macrocode}
% 
% \DescribeMacro{\lilypondset}\marg{options} Set options.x
% All keys use the same namespace, namely `\optn{lilypond}'
%    \begin{macrocode}
\newcommand\lilypondset{%
  \pgfqkeys{/lilypond}%
}
\let\lyset\lilypondset
%    \end{macrocode}
%
% Define the default style
%    \begin{macrocode}
\lilypondset{default/.style={}}
%    \end{macrocode}
%
% Process packages options
%    \begin{macrocode}
\def\ly@append@default#1{\lilypondset{default/.append style={#1}}}
\DeclareOption*{\expandafter\ly@append@default\expandafter{\CurrentOption}}
\ProcessOptions\relax
%    \end{macrocode}
%
%    \begin{macrocode}

\newlength{\ly@opt@indent}
\setlength{\ly@opt@indent}{0pt}
\newlength{\ly@opt@exampleindent}
\setlength{\ly@opt@exampleindent}{0.4in}
\newlength{\ly@opt@left@padding}
\setlength{\ly@opt@left@padding}{0pt}

\newcommand\ly@make@lilypond@bool[2]{%
  \expandafter\def\csname ly@opt@#1true\endcsname{%
    \AddToHookNext{paper}{\ly@writebool{ #2}t}%
  }%
  \expandafter\def\csname ly@opt@#1false\endcsname{%
    \AddToHookNext{paper}{\ly@writebool{ #2}f}%
  }%
  \lilypondset{#2/.is if={ly@opt@#1},#2/.default=true,no#2/.style={#2=false}}%
}
\newif\ifly@opt@time
\ly@opt@timetrue
\newif\ifly@opt@printtime
\ly@opt@printtimefalse
\newif\ifly@opt@fragment
\ly@opt@fragmentfalse
\newif\ifly@opt@quote
\ly@opt@quotefalse
\newif\ifly@opt@relative
\ly@opt@relativefalse

\ly@make@lilypond@bool{ragged@right}{ragged-right}

\lilypondset{
  extra source/.code={%
    \expandafter\def\expandafter\lilypondlyinputfiles\expandafter{\lilypondlyinputfiles\space#1}%
  },
  staffsize/.code={%
    \AddToHookNext{beforepaper}{\ly@lilypond@writelisp{set-global-staff-size #1}}%
  },
  % line-width/.initial=\linewidth,
  line-width/.code={%
    \AddToHookNext{paper}{\ly@lilypond@writelength{ line-width}{#1}}%
  },
  paper-size/.code={%
    \AddToHookNext{beginpaper}{\ly@lilypond@writelisp{set-paper-size "#1"}}%
  },,
  time/.is if=ly@opt@time,
  time/.append code={%
    \ly@opt@printtimetrue
    \AddToHookNext{layout}{\ly@lilypond@write@time}%
  },
  notime/.style={time=false},
  fragment/.is if=ly@opt@fragment,
  nofragment/.style={fragment=false},
  fragment/.append code={%
    \AddToHookNext{beforesnippet}{%
      \ifly@opt@relative
        \ly@lilypond@write@fragment@code{\string\relative \space\pgfkeysvalueof{/lilypond/relative}}%
      \fi
      \ly@lilypond@write@fragment@code{\ly@openbrace}%
      \ly@opt@fragmentfalse
    }%
    \AddToHookNext{aftersnippet}{%
      \ly@lilypond@write@fragment@code{\ly@closebrace}%
      \ly@opt@fragmentfalse
    }%
  },
  indent/.code={\setlength\ly@opt@indent{#1}},
  noindent/.style={indent=0pt},
  quote/.is if=ly@opt@quote,
  noquote/.style={quote=false},
  relative/.initial=c',
  relative/.default=c',
  relative/.code={%
    \lilypondset{fragment}%
    \ly@opt@relativetrue
    \pgfkeyssetvalue{/lilypond/relative}{#1}%
  },
  norelative/.code={%
    \ly@opt@relativefalse
  },
  output/.code={\def\lilypondoutput{#1}},
  left-padding/.code={\setlength\ly@opt@left@padding{#1}},
  loglevel/.initial=ERROR,
}
%    \end{macrocode}
% \subsection{Changes according to \texttt{lilyponddefs.sty}}
%
% \begin{macro}{\ly@lilypond@start}
% \begin{macro}{\lilypondstart}
% Redefine |\lilypondpagebreak| to typeset my own pagebreaks. 
% Redefine |\interscoreline| for my needs. Set input encoding and
% redefine |\lilypondfontencoding| which is not proper detected from
% LilyPond 2.4.2.
%
%    \begin{macrocode}
\let\ly@lilypond@start\lilypondstart
\def\lilypondstart{
  \ly@lilypond@start
  \def\interscoreline{%
    \nopagebreak[3]\par%
    \nopagebreak[3]%
    \vskip\lilypondpaperinterscoreline\lilypondpaperunit%
    \nopagebreak[3]%
  }
  \def\lilypondpagebreak{\par}
  \expandafter\inputencoding{\lilypondpaperinputencoding}
  \let\lilypondfontencoding\fontencoding
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\ly@lilypond@end}
% \begin{macro}{\lilypondend}
% After the score we insert some vertical space.
%
%    \begin{macrocode}
\let\ly@lilypond@end\lilypondend
\def\lilypondend{%
  \ly@lilypond@end%
  \vskip\afterlilypondskip%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \subsection{Helper macros}
%
% \begin{macro}{\ly@remove@ext@cmpa}
% Here we provide a macro containing only the extension for
% comparison with .ly extension
%
%    \begin{macrocode}
\def\ly@remove@ext@cmpa{ly}
%    \end{macrocode}
% \end{macro}
% 
% \begin{macro}{\ly@percent}
% \begin{macro}{\ly@dollar}
% Percent sign as text for writing into the |.lini| file
% 
%    \begin{macrocode}
\begingroup%
\catcode`\?=14
\catcode`\%=11\gdef\ly@percent{%?
}
\catcode`\$=11\gdef\ly@dollar{$?$
}
\catcode`\[=1\relax
  \catcode`\]=2\relax
\catcode`\{=11
\catcode`\}=11
\gdef\ly@openbrace[{]
  \gdef\ly@closebrace[}]
\endgroup
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 
% \begin{macro}{\ly@lilypondfile@split@ext}
% needed to split the last part of the filename to remove only the
% extension of multi dotted files and paths.
%
%    \begin{macrocode}
\def\ly@lilypondfile@split@ext#1{
  \filename@parse{#1}%
  \edef\ly@file@name{\ly@file@name.\filename@base}%
  \ifx\ly@remove@ext@cmpa\filename@ext
  \else
  \@ifundefined{filename@ext}{}{\ly@lilypondfile@split@ext\filename@ext}%
  \fi
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\ly@strip@pt}
% \begin{macro}{\ly@rem@pt}
% Macros to strip the pt from some lengths. We need it to use LilyPond
% syntax in our |.lini| file.
%
%    \begin{macrocode}
\begingroup
  \catcode`P=12
  \catcode`T=12
  \lowercase{
    \def\x{\def\ly@rem@pt##1.##2PT{##1.##2}}}
\expandafter\endgroup\x
\def\ly@strip@pt{\expandafter\ly@rem@pt \the}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% 
% \begin{macro}{\ly@strip@space}
% Strip spaces from argument
%
%    \begin{macrocode}
\def\ly@strip@space#1 {{#1}}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Customization commands}
%
% \begin{macro}{\lilypondcommandline}
% \begin{macro}{\ly@prog}
% The commandline for LilyPond.
%
%    \begin{macrocode}
\newcommand\lilypondcommandline[1]{%
  \def\ly@prog{#1}%
}
\lilypondcommandline{%
  %/usr/bin/lilypond --formats=ps  -I
  %"/home/tobias/uni/Documents/latex/pakete/tsmusic/doc/latex/tsmusic"
  %-daux-files  -dseparate-page-formats=eps  --verbose
  %-dread-file-list -dno-strip-output-dir
  %"/home/tobias/uni/Documents/latex/pakete/tsmusic/doc/latex/tsmusic/snippet-names-daa4e3fbc9d2c3936a049546f8518073.ly"
  %lilypond -I`pwd` --output=\lilypondoutput\space --tex \lilypondtex
  lilypond -I`pwd` -daux-files  -dseparate-page-formats=pdf
  --output=\lilypondoutput\space
  --loglevel=\pgfkeysvalueof{/lilypond/loglevel}
  %-dread-file-list
  -dno-strip-output-dir \lilypondtex
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\lilypondscript}
% \begin{macro}{\ly@script}
% The complete shell command for lilypond..
%
%    \begin{macrocode}
\newcommand\lilypondscript[1]{%
  \def\ly@script{#1}%
}
\def\ly@script{%
  if ! md5sum -c \lilypondlymdfivefile ;
  then   \ly@prog &&
  md5sum \lilypondlyinputfiles >\lilypondlymdfivefile ;
  fi
}%{$lyfile}; echo '{${lyfile\ly@percent.ly}}{\ly@file@name.lini}'
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\ly@input@path}
% \begin{macro}{\appendtolilypondinputpath}
% \begin{macro}{\prependtolilypondinputpath}
% \begin{macro}{\setlilypondinputpath}
% Setting the input path for LilyPond files.
%
%    \begin{macrocode}
\let\ly@input@path\@empty
\def\appendtolilypondinputpath#1{%
  \expandafter\edef\expandafter\ly@input@path\expandafter{\ly@input@path:#1}%
}
\def\prependtolilypondinputpath#1{%
  \expandafter\edef\expandafter\ly@input@path\expandafter{\expandafter#1\expandafter:\ly@input@path}%
}  
\def\setlilypondinputpath#1{%
  \edef\ly@input@path{#1}%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \begin{macro}{\afterlilypondskip}
% Skip after a LilyPond score.
%    \begin{macrocode}
\newcommand\afterlilypondskip{\baselineskip}
%    \end{macrocode}
% \end{macro}
%
% \subsection{File handling}
%
% We need a file name for the glue code or snippet data. This code
% generates the file name and returns it.
%
%    \begin{macrocode}
\newcounter{ly@snippet}
\setcounter{ly@snippet}{0}
\newcommand{\ly@newsnippet}{%
  \stepcounter{ly@snippet}%
}
\newcommand{\ly@snippetfilename}{%
  \jobname-ly\arabic{ly@snippet}%
}
%    \end{macrocode}
%
% Write a comment to a lilypond file
%
%    \begin{macrocode}
\def\ly@lilypond@writecomment#1{%
  \immediate\write\ly@ini@file{%
    \ly@percent#1%
  }%
}%
%    \end{macrocode}
%
% Write lisp code into a lilypond file.
%
%    \begin{macrocode}
\def\ly@lilypond@writelisp#1{%
  \immediate\write\ly@ini@file{%
    \string##(#1)^^J%
  }%
}%
%
% Write a parameter code into a lilypond file.
%
%    \begin{macrocode}
\def\ly@lilypond@writeparam#1#2{%
  \immediate\write\ly@ini@file{%
    #1 = \string###2^^J%
  }%
}%
%    \end{macrocode}
%
% Write a length as LilyPond code.
%
%    \begin{macrocode}
\def\ly@lilypond@writelength#1#2{%
  \@tempdima=\dimexpr#2\relax
  \immediate\write\ly@ini@file{%
    \string#1\space=\space\ly@strip@pt\@tempdima \string\pt%
  }%
}
%    \end{macrocode}
%
% Write a boolean as LilyPond code.
%
%    \begin{macrocode}
\def\ly@writebool#1#2{%
  \immediate\write\ly@ini@file{%
    #1\space=\space\string##\string###2%
  }%
  \ignorespaces
}
%    \end{macrocode}
%
% Remove the Time signature if requested.
%    \begin{macrocode}
\def\ly@lilypond@write@time{
  \ifly@opt@printtime
    \ifly@opt@time
    \else
      \immediate\write\ly@ini@file{%
        \space\string\context \ly@openbrace^^J%
        \space\space\string\Score%
      }%
      \ly@writebool{\space\space\space timing}f%
      \immediate\write\ly@ini@file{%
        \space\ly@closebrace^^J%
        \space\string\context \ly@openbrace^^J%
        \space\space\string\Staff^^J%
        \space\space\space\string\remove\space Time_signature_engraver^^J%
        \space\ly@closebrace
      }%
    \fi
  \fi
  \ly@opt@printtimefalse
}
%    \end{macrocode}
%
% Write code only, if the contained code is a fragment.
%    \begin{macrocode}
\def\ly@lilypond@write@fragment@code#1{
  \ifly@opt@fragment
    \immediate\write\ly@ini@file{#1}%
  \fi
}
%    \end{macrocode}
% 
% The name of the preamble file, that is included at the beginning of
% each lilypond snippet.
%
%    \begin{macrocode}
\def\ly@file@lypreamble{lilypond-book-preamble.ly}
%    \end{macrocode}
%
% \subsection{The macros that are only active in lilypond snippets}
%
%    \begin{macrocode}
\def\ly@lilypond@startsnippet{%
  \def\pt{pt}%
  \def\mm{mm}%
  \def\cm{cm}%
  \def\in{in}%
}
%    \end{macrocode}
% \subsection{The \texttt{lilypond-book} macros}
%
% \begin{macro}{\lilypondfile}
% \begin{macro}{\ly@lilypondfile@}
% \begin{macro}{\ly@lilypondfile@b}
% |\lilypondfile| from lilypond-book
% load a lilypond file into parser
%
%    \begin{macrocode}
\def\lilypondfile{%
%    \end{macrocode}
% decide, if optional parameters are used
%    \begin{macrocode}
  \@ifnextchar[\ly@lilypondfile@\ly@lilypondfile@b%]
}
%    \end{macrocode}
%
% with optional parameters
%
%    \begin{macrocode}
\NewHook{beforefile}
\NewHook{afterfile}
\NewHook{beforepaper}
\NewHook{beginpaper}
\NewHook{paper}
\NewHook{afterpaper}
\NewHook{layout}
\NewHook{beforesnippet}
\NewHook{aftersnippet}
\def\ly@pgfkeysnovalue{\pgfkeysnovalue}
\def\ly@lilypondfile@[#1]#2{%
  \let\input@path\ly@input@path
  \@iffileonpath{#2}{}{%
    \@iffileonpath{#2.ly}{}
    {\edef\@filef@und{#2.ly }}%
  }%
  \expandafter\expandafter\expandafter\filename@parse\expandafter\ly@strip@space\@filef@und
  \edef\ly@file@lysource{%
    \filename@area\filename@base\@ifundefined{filename@ext}{}{.\filename@ext}%
  }%
  \ifx\ly@remove@ext@cmpa\filename@ext
  \else
    \ly@lilypondfile@split@ext\filename@ext
  \fi
  \ly@lilypondsnippet@[extra source={'\ly@file@lysource'},#1]{%
    \string\include\space "\ly@file@lysource"^^J%
  }%    
}
\def\ly@lilypondsnippet@[#1]#2{%
  \ly@newsnippet
  \begingroup
  \ly@lilypond@startsnippet
  \edef\lilypondoutput{\ly@snippetfilename}%
  \edef\lilypondtex{\ly@snippetfilename.ly}%
  \edef\lilypondlymdfivefile{\ly@snippetfilename.md5}%
  \edef\lilypondlyinputfiles{\lilypondtex}%
  \edef\ly@file@name{\filename@area\filename@base}%
  \lilypondset{#1}%
  \ifly@opt@quote
    \begin{quote}%
    \fi
    \edef\ly@quoted@source{"\ly@file@lysource"}%
    \pgfkeysgetvalue{/lilypond/staffsize}{\@ly@staffsize}%
    \UseHook{beforefile}%
    \immediate\openout\ly@ini@file=\lilypondtex
    \ly@lilypond@writecomment{\ly@percent\ly@percent\space Generated by tslilypond.sty}%
    \ly@lilypond@writecomment{\ly@percent\ly@percent\space Options: [#1]}%
    \immediate\write\ly@ini@file{%
      % \ly@lilypond@writelisp{set! toplevel-score-handler ly:parser-print-score}%
      % \ly@lilypond@writelisp{set! toplevel-music-handler (lambda (p m)
      % (ly:parser-print-score p (ly:music-scorify m p)))}%
      \string\include\space "\ly@file@lypreamble"^^J%
    }%
    \ly@lilypond@writecomment{ ****************************************************************}%
    \ly@lilypond@writecomment{ Start cut-&-pastable-section}%
    \ly@lilypond@writecomment{ ****************************************************************}%
    \ly@lilypond@writelisp{ly:set-option 'eps-box-padding 3.000000}%
    \UseHook{beforepaper}%
    \immediate\write\ly@ini@file{%
      \string\paper \ly@openbrace% \}
    }
    \UseHook{beginpaper}%
% \ly@lilypond@writelisp{define dump-extents \string##t}%
%    \end{macrocode}
%   
%   These settings are always written into the LilyPond file.
%   
%    \begin{macrocode}
    \ly@lilypond@writelength{ indent}{\ly@opt@indent}%
    \ly@lilypond@writelength{ line-width}\linewidth
    \immediate\write\ly@ini@file{%
      \space\string line-width = \string##(- line-width (* mm 3.000000) (* mm 1))}%
    \UseHook{paper}%
%    \end{macrocode}
%   
%   Settings that are optional
%   
%    \begin{macrocode}
    \iffalse
      \ly@lilypond@writelength{paper-height}\paperheight
      \ly@lilypond@writelength{paper-width}\paperwidth
      \ly@lilypond@writelength{top-margin}{\topmargin + 1 in}%
      \@tempdima=\dimexpr\paperheight-\topmargin-\textheight\relax
      \ly@lilypond@writelength{bottom-margin}{\paperheight-\topmargin -
        1in - \textheight}
      \ly@lilypond@writelength{left-margin}{\leftmargin}%
      \ly@lilypond@writelength{right-margin}{\paperwidth-1in-\leftmargin-\textwidth}%
      % 
      \ly@writebool{ragged-bottom}t%
      \ly@writebool{ragged-last-bottom}t%
      \ly@writebool{ragged-last}f%
      \ly@writebool{two-sided}f% managed by LaTeX
      % 
      \ly@writebool{annotate-spacing}t%
      % 
      % \ly@lilypond@writelength{hsize}\paperwidth
      % \string\pt\space\ly@percent\space\the\paperwidth^^J\space\space
      % \ly@lilypond@writelength{vsize}\paperheight
      % \ly@lilypond@writelength{betweensystempadding}\paperheight
      % \ly@lilypond@writelength{topmargin}\@tempdima
      % \ly@lilypond@writelength{leftmargin}\@tempdima
      % 
      \ly@writebool{oddFooterMarkup}f
      \ly@writebool{oddHeaderMarkup}f
      \ly@writebool{bookTitleMarkup}f
      \ly@writebool{scoreTitleMarkup}f
      % 
      \ly@lilypond@writelength{horizontal-shift}\@tempdima
      \ly@lilypond@writelength{short-indent}\@tempdima
    \fi
    \immediate\write\ly@ini@file{%
      \ly@closebrace^^J%
    }
    \UseHook{afterpaper}%
    % 
    \immediate\write\ly@ini@file{%
      \string\layout \ly@openbrace%
    }%
    \UseHook{layout}%
    \immediate\write\ly@ini@file{%
      \ly@closebrace^^J%
    }%
    \begingroup
    \UseHook{beforesnippet}%
    \endgroup
    \ly@lilypond@writecomment{ ****************************************************************}%
    \ly@lilypond@writecomment{ ly snipppet:}%
    \ly@lilypond@writecomment{ ****************************************************************}%
    \immediate\write\ly@ini@file{%
      \string\sourcefilename \space"\CurrentFile\space LilyPond\space snippet"^^J%
      \string\sourcefileline \space\the\inputlineno^^J%
      #2%
    }%
    \ly@lilypond@writecomment{ ****************************************************************}%
    \ly@lilypond@writecomment{ end ly snipppet}%
    \ly@lilypond@writecomment{
      ****************************************************************}%
    \begingroup
    \UseHook{aftersnippet}%
    \endgroup
    \immediate\closeout\ly@ini@file
    \UseHook{afterfile}%
    \immediate\write18{\ly@script}%
    \noindent
    \let\ly@includegraphics\includegraphics
    \def\includegraphics##1{%
      \typeout{including `##1'}%
      \fbox{##1}\par
      \fboxsep0pt
      \fbox{\ly@includegraphics{##1}}%
    }%
    \parindent 0pt
    \noindent
    \ifx\preLilyPondExample \undefined
    \else
      \expandafter\preLilyPondExample
    \fi
    \def\lilypondbook{}%
    \InputIfFileExists{\ly@snippetfilename-systems.tex}{}{%
      \PackageWarning{lilypond}{%
        could not load \ly@snippetfilename-systems.tex\MessageBreak
        perhaps you didn't specify  ``--shell-escape'' or \MessageBreak
        used multiple dots in filenames%
      }%
    }%
    \ifx\postLilyPondExample \undefined
    \else
      \expandafter\postLilyPondExample
    \fi
    \hrule
    End of file
    \ifly@opt@quote
    \end{quote}%
  \fi
  \endgroup
}
%    \end{macrocode}
%
% without optional parameters
%
%    \begin{macrocode}
\def\ly@lilypondfile@b#1{
  \ly@lilypondfile@[]{#1}
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
%
% \Finale
% \PrintIndex
% \PrintChanges
%</package>
%<*steiger>
%    \begin{macrocode}
\version "2.4.0"
\include "deutsch.ly"

\header {
        title = "Der Steiger"
        composer = "Freiberger BergliederbÃ¼chlein, 1705"
}

melody =  \relative g' {
        \key g \major
        g2 fis4 a  g2 r2  h2 a4 c 
        h2 r4 g8 a  h4 h h  a8[ h] 
        c4 a8 a a4 a8 h  c4 e e  d8[ c] 
        d4 h8 h h4 a  g2 a  h4( e d) c  
        h2 a | g1
        \bar "|."
}

text = \lyricmode {
      \set stanza = "1."
      GlÃ¼ck "auf!" GlÃ¼ck "auf!" Der Stei -- ger kommt. Und er hat sein hel -- les _
      Licht bei der Nacht, und er hat sein hel -- les _  Licht bei der Nacht
      schon an -- ge -- zÃ¼ndt __ schon an -- ge -- zÃ¼ndt.
}

accompaniment = \chordmode {
        g2 d2 g1 g2 d2 g1 g1 d1 d1:7 g2. d4 g2 d2 g2. c4 g2 d g1}

\score { 
        \simultaneous {
          \context ChordNames \accompaniment
             \context Staff = "mel" {
	       \time 4/4
	       \context Voice="melodie" {
		 <<
		   \melody 
		   \addlyrics \text
		 >>
	       }
	     }
        }
        \layout { }
        \midi {
	  \tempo 4 = 120 
	}
}
%    \end{macrocode}
%</steiger>
%<*fullexample>
%    \begin{macrocode}
\version "2.4.0"
\include "deutsch.ly"

\header {
        title = "Full Example"
        composer = "Nobody"
}

melody =  \relative f' {
        \key f \major
        f1 e1 a1 e1 f1 e1 a1 e1 f1 e1 a1 e1
        \bar "|."
}

text = \lyricmode {
  \set stanza = "1."
  Full Ex -- amp -- le.
  \set stanza = "2."
  Full Ex -- amp -- le.
  \set stanza = "3."
  Full Ex -- amp -- le.
}

accompaniment = \chordmode {
  f1 c1:7 f1 c1:7
  f1 c1:7 f1 c1:7
  f1 c1:7 f1 c1:7
}

\score { 
  \simultaneous {
    \context ChordNames \accompaniment
    \context Staff = "mel" {
      \time 4/4
      \context Voice="melodie" {
        <<
        \melody 
        \addlyrics \text
        >>
      }
    }
  }
  \layout { }
  \midi {
    \tempo 4 = 120 
  }
}
%    \end{macrocode}
%</fullexample>
%<*fragmentexample>
%    \begin{macrocode}
\key f \major
c1^"Fragment" d1 e1 f1 g1 c1 d1 e1 f1 g1 c1 d1
\bar "|."
%    \end{macrocode}
%</fragmentexample>
% Local Variables:
% mode: doctex
% TeX-master: t
% End:
